knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE
)
library(NADIA)
# Error handling
graph_lerner$encapsulate <- c(train='evaluate',predict='evaluate')
library(mlr3learners)
# Creating graph learner
# imputation method
imp <- PipeOpmissRanger$new()
# encoder
encoder <- PipeOpEncodeImpact$new()
# learner
learner <- lrn('classif.glmnet')
graph <- imp %>>% encoder %>>% learner
graph_lerner <- GraphLearner$new(graph, id = 'missRanger.learner')
# resampling
set.seed(1)
resample(tsk('pima'),graph_lerner,rsmp('cv',folds=5))
# Error handling
graph_lerner$encapsulate <- c(train='evaluate',predict='evaluate')
# Creating a problematic task
data <- iris
data[,1] <- NA
task_problematic <- TaskClassif$new('task',data,'Species')
# Resampling
# All folds will be tested and the script run further
set.seed(1)
resample(task_problematic,graph_lerner,rsmp('cv',folds=5))
