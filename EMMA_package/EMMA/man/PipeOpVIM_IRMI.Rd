% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOPVIM_IRMI.R
\name{PipeOpVIM_IRMI}
\alias{PipeOpVIM_IRMI}
\title{PipeOpVIM_IRMI}
\description{
Implements IRMI methods as mlr3 pipeline more about VIM_IRMI \code{\link{autotune_VIM_Irmi}}
}
\section{Input and Output Channels}{

Input and output channels are inherited from \code{\link{PipeOpImpute}}.
}

\section{Parameters}{

The parameters are the parameters inherited from [`PipeOpImpute`], as well as: \cr
\itemize{
\item \code{id} :: \code{character(1)}\cr
Identifier of resulting object, default \code{"imput_VIM_IRMI"}.
\item \code{eps} :: \code{double(1)}\cr
Threshold for convergency, default \code{5}.
\item \code{maxit} :: \code{integer(1)}\cr
Maximum number of iterations, default \code{100}
\item \code{col_0_1} :: \code{logical(1)}\cr
Decaid if add bonus column informing where imputation been done. 0 - value was in dataset, 1 - value was imputed, default \code{FALSE}.
\item \code{step} :: \code{logical(1)}\cr
Stepwise model selection is applied when the parameter is set to TRUE, defoult \code{FALSE}.
\item \code{robust} :: \code{logical(1)}\cr
	If TRUE, robust regression methods will be applied (it's impossible to set step=TRUE and robust=TRUE at the same time), default \code{FALSE}.
\item \code{init.method} :: \code{character(1)}\cr
Method for initialization of missing values (kNN or median), default \code{'kNN'}.
\item \code{force} :: \code{logical(1)}\cr
If TRUE, the algorithm tries to find a solution in any case, possible by using different robust methods automatically. (should be set FALSE for simulation), defaault \code{FALSE}.
\item \code{out_fill} :: \code{character(1)}\cr
Output log file location if file already exists log message will be added. If NULL no log will be produced, default \code{NULL}.
}
}

\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3pipelines:PipeOpImpute]{mlr3pipelines::PipeOpImpute}} -> \code{VIM_IRMI_imputation}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PipeOpVIM_IRMI$new()}}
\item \href{#method-clone}{\code{PipeOpVIM_IRMI$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict">}\href{../../mlr3pipelines/html/PipeOp.html#method-predict}{\code{mlr3pipelines::PipeOp$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print">}\href{../../mlr3pipelines/html/PipeOp.html#method-print}{\code{mlr3pipelines::PipeOp$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train">}\href{../../mlr3pipelines/html/PipeOp.html#method-train}{\code{mlr3pipelines::PipeOp$train()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpVIM_IRMI$new(
  id = "imput_VIM_IRMI",
  eps = 5,
  maxit = 100,
  step = FALSE,
  robust = FALSE,
  init.method = "kNN",
  force = FALSE,
  col_0_1 = FALSE,
  out_file = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpVIM_IRMI$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
